;; gorilla-repl.fileformat = 1

;; **
;;; # CIM Portfolio
;; **

;; **
;;; ### Required packages
;; **

;; @@
(ns cim_portfolio.portfolio
  (:require [clojure.data.csv :as csv]
            [clj-http.client :as http]
            [cheshire.core :as json]
            [clj-time.core :as t]
            [clj-time.format :as tf]
            [clojure.string :as str]
            [java-time :as jt]
            [cim_portfolio.server :as server]
            [gorilla-plot.core :as plot]
            ))
;; @@
;; =>
;;; {"type":"html","content":"<span class='clj-nil'>nil</span>","value":"nil"}
;; <=

;; **
;;; ### Helper Functions
;; **

;; @@
;; FOR DATE PROCESSING
(def multi-parser (tf/formatter (t/default-time-zone) "YYYY-MM-dd" "YYYY/MM/dd" "YYYYMMdd"))

(defn parse-date [date]
  (tf/unparse multi-parser (tf/parse multi-parser date)))

(defn read-csv [file]
  (with-open [reader (clojure.java.io/reader file)]
    (doall (csv/read-csv reader))))
;; @@
;; =>
;;; {"type":"html","content":"<span class='clj-var'>#&#x27;cim_portfolio.portfolio/read-csv</span>","value":"#'cim_portfolio.portfolio/read-csv"}
;; <=

;; @@
(parse-date "2023/12/25")
;; @@
;; =>
;;; {"type":"html","content":"<span class='clj-string'>&quot;2023-12-25&quot;</span>","value":"\"2023-12-25\""}
;; <=

;; @@
;; HELPER FUNCTIONS FOR ORDERING A MAP BY THE DATE
(defn jt-parse-date [date-str]
  (jt/local-date "yyyy-MM-dd" date-str))

(defn jt-compare-dates [date-str1 date-str2]
  (let [date1 (jt-parse-date date-str1)
        date2 (jt-parse-date date-str2)]
    (jt/before? date1 date2)))

(defn sort-map-by-date [map]
  (into (sorted-map-by jt-compare-dates) map))
;; @@
;; =>
;;; {"type":"html","content":"<span class='clj-var'>#&#x27;cim_portfolio.portfolio/sort-map-by-date</span>","value":"#'cim_portfolio.portfolio/sort-map-by-date"}
;; <=

;; @@
;; Helper functions for computing cumulative returns
(defn sum-up-to-key [key data]
  (
   + (get data key 0)		;; Adds data entry of key itself as well
     (->> (keys data)	;; calculates the sum of entries till key
       (take-while #(not= % key))
       (map #(get data % 0))
       (apply +))
   )
  
)


(sum-up-to-key "c" {"a" 1 "b" 2 "c" 3 "d" 4 "e" 5}) ; Output: 6
;; @@
;; =>
;;; {"type":"html","content":"<span class='clj-long'>6</span>","value":"6"}
;; <=

;; @@
;; Computes arithmetic, log, and cumulative return for a given list of prices
(defn calculate-returns [prices]
  (let [price-changes (map #(double (/ (second %) (first %))) (partition 2 1 prices))
        arithmetic-returns (mapv #(- % 1.0) price-changes)
        log-returns (mapv #(Math/log %) price-changes)
        cumulative-log-return (reduce + log-returns)]
    {
     :cumulative-return cumulative-log-return
     :arithmetic-returns arithmetic-returns
     :log-returns log-returns
     }))

;; Similar to function above - associates the returns with their corresponding date
(defn calculate-returns-with-corresponding-date [prices dates]
  (let [price-changes (map #(double (/ (second %) (first %))) (partition 2 1 prices))
        arithmetic-returns (mapv #(- % 1.0) price-changes)
        log-returns (mapv #(Math/log %) price-changes)
        cumulative-log-return (reduce + log-returns)]
    {
     :cumulative-return cumulative-log-return
     :arithmetic-returns (sort-map-by-date (zipmap (rest dates) arithmetic-returns))
     :log-returns (sort-map-by-date (zipmap (rest dates) log-returns))
     }))

;; Calculates portfolio return - accepts map {:stock cash-invested} and stock-performance generated by calculate-returns
(defn calculate-portfolio-return [cash-invested returns]
  (let [total-investment (apply + (vals cash-invested))]
    (->> cash-invested
         (map (fn [[security invested]]
                (let [weight (/ invested total-investment)
                      return (:cumulative-return (get returns security))]
                  (* weight return))))
         (apply +))))

;; Calculates cumulative return UP TILL a given date
(defn get-cumulative-return-till-given-date [cumulative-returns date]
  (sum-up-to-key date cumulative-returns)
)

;; Only calculates portfolio return up till a given date
(defn calculate-portfolio-return-for-given-date [cash-invested returns date]
  ;(println "------")
  ;(println "Calculating returns on: " date)
  ;(println cash-invested)
  ;(println "------")
  (let [total-investment (apply + (vals cash-invested))]
    (->> cash-invested
         (map (fn [[security invested]]
                (let [weight (/ invested total-investment)
                      return (get-cumulative-return-till-given-date (:log-returns (get returns security)) date)
                     ]
                  (* weight return))))
         (apply +))))
;; @@
;; =>
;;; {"type":"html","content":"<span class='clj-var'>#&#x27;cim_portfolio.portfolio/calculate-portfolio-return-for-given-date</span>","value":"#'cim_portfolio.portfolio/calculate-portfolio-return-for-given-date"}
;; <=

;; @@
(calculate-returns [100 110 120 130])
;; @@
;; =>
;;; {"type":"list-like","open":"<span class='clj-map'>{</span>","close":"<span class='clj-map'>}</span>","separator":", ","items":[{"type":"list-like","open":"","close":"","separator":" ","items":[{"type":"html","content":"<span class='clj-keyword'>:cumulative-return</span>","value":":cumulative-return"},{"type":"html","content":"<span class='clj-double'>0.262364264467491</span>","value":"0.262364264467491"}],"value":"[:cumulative-return 0.262364264467491]"},{"type":"list-like","open":"","close":"","separator":" ","items":[{"type":"html","content":"<span class='clj-keyword'>:arithmetic-returns</span>","value":":arithmetic-returns"},{"type":"list-like","open":"<span class='clj-vector'>[</span>","close":"<span class='clj-vector'>]</span>","separator":" ","items":[{"type":"html","content":"<span class='clj-double'>0.10000000000000009</span>","value":"0.10000000000000009"},{"type":"html","content":"<span class='clj-double'>0.09090909090909105</span>","value":"0.09090909090909105"},{"type":"html","content":"<span class='clj-double'>0.08333333333333304</span>","value":"0.08333333333333304"}],"value":"[0.10000000000000009 0.09090909090909105 0.08333333333333304]"}],"value":"[:arithmetic-returns [0.10000000000000009 0.09090909090909105 0.08333333333333304]]"},{"type":"list-like","open":"","close":"","separator":" ","items":[{"type":"html","content":"<span class='clj-keyword'>:log-returns</span>","value":":log-returns"},{"type":"list-like","open":"<span class='clj-vector'>[</span>","close":"<span class='clj-vector'>]</span>","separator":" ","items":[{"type":"html","content":"<span class='clj-double'>0.09531017980432493</span>","value":"0.09531017980432493"},{"type":"html","content":"<span class='clj-double'>0.0870113769896299</span>","value":"0.0870113769896299"},{"type":"html","content":"<span class='clj-double'>0.08004270767353615</span>","value":"0.08004270767353615"}],"value":"[0.09531017980432493 0.0870113769896299 0.08004270767353615]"}],"value":"[:log-returns [0.09531017980432493 0.0870113769896299 0.08004270767353615]]"}],"value":"{:cumulative-return 0.262364264467491, :arithmetic-returns [0.10000000000000009 0.09090909090909105 0.08333333333333304], :log-returns [0.09531017980432493 0.0870113769896299 0.08004270767353615]}"}
;; <=

;; **
;;; ### YFinance API
;; **

;; @@
(server/get-ticker-price-all "NVDA" "2024-02-15")
;; @@
;; ->
;;; [*********************100%%**********************]  1 of 1 completed
;;; 
;; <-
;; =>
;;; {"type":"list-like","open":"<span class='clj-vector'>[</span>","close":"<span class='clj-vector'>]</span>","separator":" ","items":[{"type":"list-like","open":"<span class='clj-vector'>[</span>","close":"<span class='clj-vector'>]</span>","separator":" ","items":[{"type":"html","content":"<span class='clj-string'>&quot;2024-02-16&quot;</span>","value":"\"2024-02-16\""},{"type":"html","content":"<span class='clj-double'>741.0</span>","value":"741.0"},{"type":"html","content":"<span class='clj-double'>726.0959472656</span>","value":"726.0959472656"}],"value":"[\"2024-02-16\" 741.0 726.0959472656]"},{"type":"list-like","open":"<span class='clj-vector'>[</span>","close":"<span class='clj-vector'>]</span>","separator":" ","items":[{"type":"html","content":"<span class='clj-string'>&quot;2024-02-20&quot;</span>","value":"\"2024-02-20\""},{"type":"html","content":"<span class='clj-double'>719.4699707031</span>","value":"719.4699707031"},{"type":"html","content":"<span class='clj-double'>694.4874267578</span>","value":"694.4874267578"}],"value":"[\"2024-02-20\" 719.4699707031 694.4874267578]"},{"type":"list-like","open":"<span class='clj-vector'>[</span>","close":"<span class='clj-vector'>]</span>","separator":" ","items":[{"type":"html","content":"<span class='clj-string'>&quot;2024-02-21&quot;</span>","value":"\"2024-02-21\""},{"type":"html","content":"<span class='clj-double'>680.0599975586</span>","value":"680.0599975586"},{"type":"html","content":"<span class='clj-double'>674.688293457</span>","value":"674.688293457"}],"value":"[\"2024-02-21\" 680.0599975586 674.688293457]"},{"type":"list-like","open":"<span class='clj-vector'>[</span>","close":"<span class='clj-vector'>]</span>","separator":" ","items":[{"type":"html","content":"<span class='clj-string'>&quot;2024-02-22&quot;</span>","value":"\"2024-02-22\""},{"type":"html","content":"<span class='clj-double'>750.25</span>","value":"750.25"},{"type":"html","content":"<span class='clj-double'>785.3431396484</span>","value":"785.3431396484"}],"value":"[\"2024-02-22\" 750.25 785.3431396484]"},{"type":"list-like","open":"<span class='clj-vector'>[</span>","close":"<span class='clj-vector'>]</span>","separator":" ","items":[{"type":"html","content":"<span class='clj-string'>&quot;2024-02-23&quot;</span>","value":"\"2024-02-23\""},{"type":"html","content":"<span class='clj-double'>807.9000244141</span>","value":"807.9000244141"},{"type":"html","content":"<span class='clj-double'>788.1329956055</span>","value":"788.1329956055"}],"value":"[\"2024-02-23\" 807.9000244141 788.1329956055]"},{"type":"list-like","open":"<span class='clj-vector'>[</span>","close":"<span class='clj-vector'>]</span>","separator":" ","items":[{"type":"html","content":"<span class='clj-string'>&quot;2024-02-26&quot;</span>","value":"\"2024-02-26\""},{"type":"html","content":"<span class='clj-double'>797.0</span>","value":"797.0"},{"type":"html","content":"<span class='clj-double'>790.8828735352</span>","value":"790.8828735352"}],"value":"[\"2024-02-26\" 797.0 790.8828735352]"},{"type":"list-like","open":"<span class='clj-vector'>[</span>","close":"<span class='clj-vector'>]</span>","separator":" ","items":[{"type":"html","content":"<span class='clj-string'>&quot;2024-02-27&quot;</span>","value":"\"2024-02-27\""},{"type":"html","content":"<span class='clj-double'>793.8099975586</span>","value":"793.8099975586"},{"type":"html","content":"<span class='clj-double'>786.9730834961</span>","value":"786.9730834961"}],"value":"[\"2024-02-27\" 793.8099975586 786.9730834961]"},{"type":"list-like","open":"<span class='clj-vector'>[</span>","close":"<span class='clj-vector'>]</span>","separator":" ","items":[{"type":"html","content":"<span class='clj-string'>&quot;2024-02-28&quot;</span>","value":"\"2024-02-28\""},{"type":"html","content":"<span class='clj-double'>776.200012207</span>","value":"776.200012207"},{"type":"html","content":"<span class='clj-double'>776.5935668945</span>","value":"776.5935668945"}],"value":"[\"2024-02-28\" 776.200012207 776.5935668945]"},{"type":"list-like","open":"<span class='clj-vector'>[</span>","close":"<span class='clj-vector'>]</span>","separator":" ","items":[{"type":"html","content":"<span class='clj-string'>&quot;2024-02-29&quot;</span>","value":"\"2024-02-29\""},{"type":"html","content":"<span class='clj-double'>790.9400024414</span>","value":"790.9400024414"},{"type":"html","content":"<span class='clj-double'>791.0828857422</span>","value":"791.0828857422"}],"value":"[\"2024-02-29\" 790.9400024414 791.0828857422]"},{"type":"list-like","open":"<span class='clj-vector'>[</span>","close":"<span class='clj-vector'>]</span>","separator":" ","items":[{"type":"html","content":"<span class='clj-string'>&quot;2024-03-01&quot;</span>","value":"\"2024-03-01\""},{"type":"html","content":"<span class='clj-double'>800.0</span>","value":"800.0"},{"type":"html","content":"<span class='clj-double'>822.7514038086</span>","value":"822.7514038086"}],"value":"[\"2024-03-01\" 800.0 822.7514038086]"},{"type":"list-like","open":"<span class='clj-vector'>[</span>","close":"<span class='clj-vector'>]</span>","separator":" ","items":[{"type":"html","content":"<span class='clj-string'>&quot;2024-03-04&quot;</span>","value":"\"2024-03-04\""},{"type":"html","content":"<span class='clj-double'>841.299987793</span>","value":"841.299987793"},{"type":"html","content":"<span class='clj-double'>852.3300170898</span>","value":"852.3300170898"}],"value":"[\"2024-03-04\" 841.299987793 852.3300170898]"},{"type":"list-like","open":"<span class='clj-vector'>[</span>","close":"<span class='clj-vector'>]</span>","separator":" ","items":[{"type":"html","content":"<span class='clj-string'>&quot;2024-03-05&quot;</span>","value":"\"2024-03-05\""},{"type":"html","content":"<span class='clj-double'>852.700012207</span>","value":"852.700012207"},{"type":"html","content":"<span class='clj-double'>859.6400146484</span>","value":"859.6400146484"}],"value":"[\"2024-03-05\" 852.700012207 859.6400146484]"},{"type":"list-like","open":"<span class='clj-vector'>[</span>","close":"<span class='clj-vector'>]</span>","separator":" ","items":[{"type":"html","content":"<span class='clj-string'>&quot;2024-03-06&quot;</span>","value":"\"2024-03-06\""},{"type":"html","content":"<span class='clj-double'>880.2199707031</span>","value":"880.2199707031"},{"type":"html","content":"<span class='clj-double'>887.0</span>","value":"887.0"}],"value":"[\"2024-03-06\" 880.2199707031 887.0]"},{"type":"list-like","open":"<span class='clj-vector'>[</span>","close":"<span class='clj-vector'>]</span>","separator":" ","items":[{"type":"html","content":"<span class='clj-string'>&quot;2024-03-07&quot;</span>","value":"\"2024-03-07\""},{"type":"html","content":"<span class='clj-double'>901.5800170898</span>","value":"901.5800170898"},{"type":"html","content":"<span class='clj-double'>926.6900024414</span>","value":"926.6900024414"}],"value":"[\"2024-03-07\" 901.5800170898 926.6900024414]"},{"type":"list-like","open":"<span class='clj-vector'>[</span>","close":"<span class='clj-vector'>]</span>","separator":" ","items":[{"type":"html","content":"<span class='clj-string'>&quot;2024-03-08&quot;</span>","value":"\"2024-03-08\""},{"type":"html","content":"<span class='clj-double'>951.3800048828</span>","value":"951.3800048828"},{"type":"html","content":"<span class='clj-double'>875.2800292969</span>","value":"875.2800292969"}],"value":"[\"2024-03-08\" 951.3800048828 875.2800292969]"},{"type":"list-like","open":"<span class='clj-vector'>[</span>","close":"<span class='clj-vector'>]</span>","separator":" ","items":[{"type":"html","content":"<span class='clj-string'>&quot;2024-03-11&quot;</span>","value":"\"2024-03-11\""},{"type":"html","content":"<span class='clj-double'>864.2899780273</span>","value":"864.2899780273"},{"type":"html","content":"<span class='clj-double'>857.7399902344</span>","value":"857.7399902344"}],"value":"[\"2024-03-11\" 864.2899780273 857.7399902344]"},{"type":"list-like","open":"<span class='clj-vector'>[</span>","close":"<span class='clj-vector'>]</span>","separator":" ","items":[{"type":"html","content":"<span class='clj-string'>&quot;2024-03-12&quot;</span>","value":"\"2024-03-12\""},{"type":"html","content":"<span class='clj-double'>880.4899902344</span>","value":"880.4899902344"},{"type":"html","content":"<span class='clj-double'>919.1300048828</span>","value":"919.1300048828"}],"value":"[\"2024-03-12\" 880.4899902344 919.1300048828]"},{"type":"list-like","open":"<span class='clj-vector'>[</span>","close":"<span class='clj-vector'>]</span>","separator":" ","items":[{"type":"html","content":"<span class='clj-string'>&quot;2024-03-13&quot;</span>","value":"\"2024-03-13\""},{"type":"html","content":"<span class='clj-double'>910.549987793</span>","value":"910.549987793"},{"type":"html","content":"<span class='clj-double'>908.8800048828</span>","value":"908.8800048828"}],"value":"[\"2024-03-13\" 910.549987793 908.8800048828]"},{"type":"list-like","open":"<span class='clj-vector'>[</span>","close":"<span class='clj-vector'>]</span>","separator":" ","items":[{"type":"html","content":"<span class='clj-string'>&quot;2024-03-14&quot;</span>","value":"\"2024-03-14\""},{"type":"html","content":"<span class='clj-double'>895.7700195312</span>","value":"895.7700195312"},{"type":"html","content":"<span class='clj-double'>879.4400024414</span>","value":"879.4400024414"}],"value":"[\"2024-03-14\" 895.7700195312 879.4400024414]"},{"type":"list-like","open":"<span class='clj-vector'>[</span>","close":"<span class='clj-vector'>]</span>","separator":" ","items":[{"type":"html","content":"<span class='clj-string'>&quot;2024-03-15&quot;</span>","value":"\"2024-03-15\""},{"type":"html","content":"<span class='clj-double'>869.299987793</span>","value":"869.299987793"},{"type":"html","content":"<span class='clj-double'>878.3699951172</span>","value":"878.3699951172"}],"value":"[\"2024-03-15\" 869.299987793 878.3699951172]"},{"type":"list-like","open":"<span class='clj-vector'>[</span>","close":"<span class='clj-vector'>]</span>","separator":" ","items":[{"type":"html","content":"<span class='clj-string'>&quot;2024-03-18&quot;</span>","value":"\"2024-03-18\""},{"type":"html","content":"<span class='clj-double'>903.8800048828</span>","value":"903.8800048828"},{"type":"html","content":"<span class='clj-double'>884.549987793</span>","value":"884.549987793"}],"value":"[\"2024-03-18\" 903.8800048828 884.549987793]"},{"type":"list-like","open":"<span class='clj-vector'>[</span>","close":"<span class='clj-vector'>]</span>","separator":" ","items":[{"type":"html","content":"<span class='clj-string'>&quot;2024-03-19&quot;</span>","value":"\"2024-03-19\""},{"type":"html","content":"<span class='clj-double'>867.0</span>","value":"867.0"},{"type":"html","content":"<span class='clj-double'>893.9799804688</span>","value":"893.9799804688"}],"value":"[\"2024-03-19\" 867.0 893.9799804688]"},{"type":"list-like","open":"<span class='clj-vector'>[</span>","close":"<span class='clj-vector'>]</span>","separator":" ","items":[{"type":"html","content":"<span class='clj-string'>&quot;2024-03-20&quot;</span>","value":"\"2024-03-20\""},{"type":"html","content":"<span class='clj-double'>897.9699707031</span>","value":"897.9699707031"},{"type":"html","content":"<span class='clj-double'>903.7199707031</span>","value":"903.7199707031"}],"value":"[\"2024-03-20\" 897.9699707031 903.7199707031]"},{"type":"list-like","open":"<span class='clj-vector'>[</span>","close":"<span class='clj-vector'>]</span>","separator":" ","items":[{"type":"html","content":"<span class='clj-string'>&quot;2024-03-21&quot;</span>","value":"\"2024-03-21\""},{"type":"html","content":"<span class='clj-double'>923.0</span>","value":"923.0"},{"type":"html","content":"<span class='clj-double'>914.3499755859</span>","value":"914.3499755859"}],"value":"[\"2024-03-21\" 923.0 914.3499755859]"},{"type":"list-like","open":"<span class='clj-vector'>[</span>","close":"<span class='clj-vector'>]</span>","separator":" ","items":[{"type":"html","content":"<span class='clj-string'>&quot;2024-03-22&quot;</span>","value":"\"2024-03-22\""},{"type":"html","content":"<span class='clj-double'>911.4099731445</span>","value":"911.4099731445"},{"type":"html","content":"<span class='clj-double'>942.8900146484</span>","value":"942.8900146484"}],"value":"[\"2024-03-22\" 911.4099731445 942.8900146484]"},{"type":"list-like","open":"<span class='clj-vector'>[</span>","close":"<span class='clj-vector'>]</span>","separator":" ","items":[{"type":"html","content":"<span class='clj-string'>&quot;2024-03-25&quot;</span>","value":"\"2024-03-25\""},{"type":"html","content":"<span class='clj-double'>939.4099731445</span>","value":"939.4099731445"},{"type":"html","content":"<span class='clj-double'>950.0200195312</span>","value":"950.0200195312"}],"value":"[\"2024-03-25\" 939.4099731445 950.0200195312]"},{"type":"list-like","open":"<span class='clj-vector'>[</span>","close":"<span class='clj-vector'>]</span>","separator":" ","items":[{"type":"html","content":"<span class='clj-string'>&quot;2024-03-26&quot;</span>","value":"\"2024-03-26\""},{"type":"html","content":"<span class='clj-double'>958.5100097656</span>","value":"958.5100097656"},{"type":"html","content":"<span class='clj-double'>925.6099853516</span>","value":"925.6099853516"}],"value":"[\"2024-03-26\" 958.5100097656 925.6099853516]"},{"type":"list-like","open":"<span class='clj-vector'>[</span>","close":"<span class='clj-vector'>]</span>","separator":" ","items":[{"type":"html","content":"<span class='clj-string'>&quot;2024-03-27&quot;</span>","value":"\"2024-03-27\""},{"type":"html","content":"<span class='clj-double'>931.1199951172</span>","value":"931.1199951172"},{"type":"html","content":"<span class='clj-double'>902.5</span>","value":"902.5"}],"value":"[\"2024-03-27\" 931.1199951172 902.5]"},{"type":"list-like","open":"<span class='clj-vector'>[</span>","close":"<span class='clj-vector'>]</span>","separator":" ","items":[{"type":"html","content":"<span class='clj-string'>&quot;2024-03-28&quot;</span>","value":"\"2024-03-28\""},{"type":"html","content":"<span class='clj-double'>900.0</span>","value":"900.0"},{"type":"html","content":"<span class='clj-double'>903.5599975586</span>","value":"903.5599975586"}],"value":"[\"2024-03-28\" 900.0 903.5599975586]"},{"type":"list-like","open":"<span class='clj-vector'>[</span>","close":"<span class='clj-vector'>]</span>","separator":" ","items":[{"type":"html","content":"<span class='clj-string'>&quot;2024-04-01&quot;</span>","value":"\"2024-04-01\""},{"type":"html","content":"<span class='clj-double'>902.9899902344</span>","value":"902.9899902344"},{"type":"html","content":"<span class='clj-double'>903.6300048828</span>","value":"903.6300048828"}],"value":"[\"2024-04-01\" 902.9899902344 903.6300048828]"}],"value":"[[\"2024-02-16\" 741.0 726.0959472656] [\"2024-02-20\" 719.4699707031 694.4874267578] [\"2024-02-21\" 680.0599975586 674.688293457] [\"2024-02-22\" 750.25 785.3431396484] [\"2024-02-23\" 807.9000244141 788.1329956055] [\"2024-02-26\" 797.0 790.8828735352] [\"2024-02-27\" 793.8099975586 786.9730834961] [\"2024-02-28\" 776.200012207 776.5935668945] [\"2024-02-29\" 790.9400024414 791.0828857422] [\"2024-03-01\" 800.0 822.7514038086] [\"2024-03-04\" 841.299987793 852.3300170898] [\"2024-03-05\" 852.700012207 859.6400146484] [\"2024-03-06\" 880.2199707031 887.0] [\"2024-03-07\" 901.5800170898 926.6900024414] [\"2024-03-08\" 951.3800048828 875.2800292969] [\"2024-03-11\" 864.2899780273 857.7399902344] [\"2024-03-12\" 880.4899902344 919.1300048828] [\"2024-03-13\" 910.549987793 908.8800048828] [\"2024-03-14\" 895.7700195312 879.4400024414] [\"2024-03-15\" 869.299987793 878.3699951172] [\"2024-03-18\" 903.8800048828 884.549987793] [\"2024-03-19\" 867.0 893.9799804688] [\"2024-03-20\" 897.9699707031 903.7199707031] [\"2024-03-21\" 923.0 914.3499755859] [\"2024-03-22\" 911.4099731445 942.8900146484] [\"2024-03-25\" 939.4099731445 950.0200195312] [\"2024-03-26\" 958.5100097656 925.6099853516] [\"2024-03-27\" 931.1199951172 902.5] [\"2024-03-28\" 900.0 903.5599975586] [\"2024-04-01\" 902.9899902344 903.6300048828]]"}
;; <=

;; **
;;; ### Portfolio Processing Section
;; **

;; @@
(defn calculate-portfolio-new [data]
  (loop [cash 0.0
         portfolio {}
         portfolio-value {}
         current-value 0.0
         stock-performance {}
         cash-invested {}
         cash-invested-by-date {}
         data (rest data)]
    (if (empty? data)
      [cash portfolio portfolio-value current-value cash-invested cash-invested-by-date stock-performance]
      (let [[date action amount ticker] (first data)
            ticker-prices (server/get-ticker-price-all ticker (parse-date date))
            executed-date (first (first ticker-prices))				; gets the date the buy/sell order is executed
            ]
        (cond
          (= action "buy")
          (if (pos? (Double. amount))
            (let [price (second (first ticker-prices))        	; Gets open price of next trading day
                  currPrice (nth (last ticker-prices) 2)		; Gets adj close price of latest day
                  prices (mapv #(nth % 2) ticker-prices)       	; Extracts the prices from ticker-prices
                  amounts (repeatedly (count prices) #(Double. amount))	; Creates a sequence of amounts matching the number of prices
                  trading-dates (mapv #(first %) ticker-prices)
                  ]
              (recur (- cash (* (Double. amount) price))
                     (assoc portfolio ticker (+ (get portfolio ticker 0) (Double. amount)))
                     (merge-with + portfolio-value (zipmap (map first ticker-prices) (map #(- % (* (Double. amount) price))(map * prices amounts)))) ; Updates portfolio-value with the calculated values
                     (+ current-value (* (Double. amount) currPrice))
                     
                     (assoc stock-performance ticker (calculate-returns-with-corresponding-date prices trading-dates))
                     (assoc cash-invested ticker (+ (get cash-invested ticker 0) (* (Double. amount) price)))
                     (assoc cash-invested-by-date executed-date (assoc cash-invested ticker (+ (get cash-invested ticker 0) (* (Double. amount) price))))
                     (rest data)))
            (recur cash portfolio portfolio-value current-value cash-invested cash-invested-by-date stock-performance (rest data)))

          (= action "sell")
          (let [price (second (first ticker-prices))
                currPrice (second (last ticker-prices))
                prices (map second ticker-prices)
                amounts (repeatedly (count prices) #(Double. amount))
                trading-dates (mapv #(first %) ticker-prices)
                ]
            (recur (+ cash (* (Double. amount) price))
                   (assoc portfolio ticker (- (get portfolio ticker 0) (Double. amount)))
                   (merge-with + portfolio-value (zipmap (map first ticker-prices) (map #(- % (* (Double. amount) price))(map * prices amounts)))) ; Updates portfolio-value with the calculated values
                   (- current-value (* (Double. amount) currPrice))
                   
                   (assoc stock-performance ticker (calculate-returns-with-corresponding-date prices trading-dates))
                   (assoc cash-invested ticker (- (get cash-invested ticker 0) (* (Double. amount) price)))
                   (assoc cash-invested-by-date executed-date (assoc cash-invested ticker (- (get cash-invested ticker 0) (* (Double. amount) price))))
                   (rest data)))
          )))))
;; @@
;; =>
;;; {"type":"html","content":"<span class='clj-var'>#&#x27;cim_portfolio.portfolio/calculate-portfolio-new</span>","value":"#'cim_portfolio.portfolio/calculate-portfolio-new"}
;; <=

;; @@
(def portfolio-options {
                        :starting-cash 200000
                       }
)

(def view-options {
                   :show-individual-stock-performance-by-day 	false
                   :show-cumulative-portfolio-return-by-day		true
                   :show-portfolio-value-by-day					true
                  }
)
;; @@
;; =>
;;; {"type":"html","content":"<span class='clj-var'>#&#x27;cim_portfolio.portfolio/view-options</span>","value":"#'cim_portfolio.portfolio/view-options"}
;; <=

;; @@
(def input-file "examples/testPortfolio1.csv")

(let [data (read-csv input-file)
      [cash portfolio portfolio-value current-value cash-invested cash-invested-by-date stock-performance] (calculate-portfolio-new data)
      sorted-portfolio-value (map #(vector (first %) (+ (:starting-cash portfolio-options) (second %))) (sort-map-by-date portfolio-value))
      cash-invested-by-dates (into [] cash-invested-by-date)
      returns-by-date (zipmap (map #(first %) cash-invested-by-date)(mapv #(calculate-portfolio-return-for-given-date (second %) stock-performance (first %)) cash-invested-by-dates))
      ]
  (def portfolio-value-by-day sorted-portfolio-value)
  
  (println "\n\n----------------------------------")
  (println "Current Portfolio Value:" (format "%.2f" (+ (:starting-cash portfolio-options) (+ cash current-value))) "\n")
  (println "Cash On Hand (excluding value of portfolio):" (format "%.2f"(+ (:starting-cash portfolio-options) cash)) "\n")
  (println "Portfolio (units held of each stock):" portfolio "\n")
  (println "Cash invested in each stock: " cash-invested "\n")
  (println "Cumulative Portfolio Return: " (calculate-portfolio-return cash-invested stock-performance) "\n")
  
  (println "----------------------------------")
  (if (:show-cumulative-portfolio-return-by-day view-options) (println "Portfolio Return by date: \n" returns-by-date))
  (println "----------------------------------\n")
  
  (println "----------------------------------")
  (println "Portfolio Value Day-by-Day: ")
  (if (:show-portfolio-value-by-day view-options) 
    (run! println (map #(vector (first %) (format "%.2f" (second %))) sorted-portfolio-value))
    (println "Omitting...")
  )
  (println "----------------------------------\n")
  
  (println "----------------------------------")
  (println "Individual Stock Performance: ")
  (if (:show-individual-stock-performance-by-day view-options) 
    (clojure.pprint/pprint stock-performance)
    (println "Omitting...")
  )
  (println "----------------------------------\n")
)
;; @@
;; ->
;;; [*********************100%%**********************]  1 of 1 completed
;;; [*********************100%%**********************]  1 of 1 completed
;;; [*********************100%%**********************]  1 of 1 completed
;;; [*********************100%%**********************]  1 of 1 completed
;;; 
;;; 
;;; ----------------------------------
;;; Current Portfolio Value: 216485.00 
;;; 
;;; Cash On Hand (excluding value of portfolio): 150671.80 
;;; 
;;; Portfolio (units held of each stock): {NVDA 70.0, GOOG 50.0, TSLA -30.0} 
;;; 
;;; Cash invested in each stock:  {NVDA 48171.300659181, GOOG 7172.49984741, TSLA -6015.600128175} 
;;; 
;;; Cumulative Portfolio Return:  0.07606810649276938 
;;; 
;;; ----------------------------------
;;; Portfolio Return by date: 
;;;  {2024-02-16 0.04380313313167507, 2024-02-26 0.05056143093017095, 2024-03-01 0.05301707603191037, 2024-03-11 0.05926249505985491}
;;; ----------------------------------
;;; 
;;; ----------------------------------
;;; Portfolio Value Day-by-Day: 
;;; [2024-02-16 198509.59]
;;; [2024-02-20 195348.74]
;;; [2024-02-21 193368.83]
;;; [2024-02-22 204434.31]
;;; [2024-02-23 204713.30]
;;; [2024-02-26 204753.29]
;;; [2024-02-27 204429.81]
;;; [2024-02-28 203258.36]
;;; [2024-02-29 204824.79]
;;; [2024-03-01 207906.64]
;;; [2024-03-04 210616.80]
;;; [2024-03-05 210856.40]
;;; [2024-03-06 213439.60]
;;; [2024-03-07 217373.40]
;;; [2024-03-08 212499.40]
;;; [2024-03-11 210696.40]
;;; [2024-03-12 217425.00]
;;; [2024-03-13 217217.70]
;;; [2024-03-14 213850.40]
;;; [2024-03-15 212702.50]
;;; [2024-03-18 214879.20]
;;; [2024-03-19 214758.00]
;;; [2024-03-20 216768.30]
;;; [2024-03-21 218636.90]
;;; [2024-03-22 221003.70]
;;; [2024-03-25 222587.80]
;;; [2024-03-26 221041.90]
;;; [2024-03-27 218006.10]
;;; [2024-03-28 217075.70]
;;; [2024-04-01 217346.00]
;;; ----------------------------------
;;; 
;;; ----------------------------------
;;; Individual Stock Performance: 
;;; Omitting...
;;; ----------------------------------
;;; 
;;; 
;; <-
;; =>
;;; {"type":"html","content":"<span class='clj-nil'>nil</span>","value":"nil"}
;; <=

;; @@
(plot/list-plot (cons (:starting-cash portfolio-options) (map #(second %) portfolio-value-by-day)) :joined true :plot-size 600)
;; @@
;; =>
;;; {"type":"vega","content":{"width":600,"height":370.8282,"padding":{"top":10,"left":55,"bottom":40,"right":10},"data":[{"name":"0dc70d56-80d5-4c65-b6cb-f2a03d9e5f43","values":[{"x":0,"y":200000},{"x":1,"y":198509.59472656},{"x":2,"y":195348.74267578},{"x":3,"y":193368.82934569998},{"x":4,"y":204434.31396484},{"x":5,"y":204713.29956055002},{"x":6,"y":204753.28750611},{"x":7,"y":204429.808807375},{"x":8,"y":203258.35647583},{"x":9,"y":204824.788665775},{"x":10,"y":207906.640625005},{"x":11,"y":210616.80145263},{"x":12,"y":210856.401519774},{"x":13,"y":213439.600067141},{"x":14,"y":217373.40072632},{"x":15,"y":212499.40261841},{"x":16,"y":210696.399078371},{"x":17,"y":217425.000762943},{"x":18,"y":217217.701110845},{"x":19,"y":213850.401458742},{"x":20,"y":212702.499847414},{"x":21,"y":214879.19952393},{"x":22,"y":214757.998657233},{"x":23,"y":216768.296508789},{"x":24,"y":218636.898498534},{"x":25,"y":221003.701629638},{"x":26,"y":222587.80136108},{"x":27,"y":221041.899414067},{"x":28,"y":218006.100769045},{"x":29,"y":217075.700073242},{"x":30,"y":217346.00082397502}]}],"marks":[{"type":"line","from":{"data":"0dc70d56-80d5-4c65-b6cb-f2a03d9e5f43"},"properties":{"enter":{"x":{"scale":"x","field":"data.x"},"y":{"scale":"y","field":"data.y"},"stroke":{"value":"#FF29D2"},"strokeWidth":{"value":2},"strokeOpacity":{"value":1}}}}],"scales":[{"name":"x","type":"linear","range":"width","zero":false,"domain":{"data":"0dc70d56-80d5-4c65-b6cb-f2a03d9e5f43","field":"data.x"}},{"name":"y","type":"linear","range":"height","nice":true,"zero":false,"domain":{"data":"0dc70d56-80d5-4c65-b6cb-f2a03d9e5f43","field":"data.y"}}],"axes":[{"type":"x","scale":"x"},{"type":"y","scale":"y"}]},"value":"#gorilla_repl.vega.VegaView{:content {:width 600, :height 370.8282, :padding {:top 10, :left 55, :bottom 40, :right 10}, :data [{:name \"0dc70d56-80d5-4c65-b6cb-f2a03d9e5f43\", :values ({:x 0, :y 200000} {:x 1, :y 198509.59472656} {:x 2, :y 195348.74267578} {:x 3, :y 193368.82934569998} {:x 4, :y 204434.31396484} {:x 5, :y 204713.29956055002} {:x 6, :y 204753.28750611} {:x 7, :y 204429.808807375} {:x 8, :y 203258.35647583} {:x 9, :y 204824.788665775} {:x 10, :y 207906.640625005} {:x 11, :y 210616.80145263} {:x 12, :y 210856.401519774} {:x 13, :y 213439.600067141} {:x 14, :y 217373.40072632} {:x 15, :y 212499.40261841} {:x 16, :y 210696.399078371} {:x 17, :y 217425.000762943} {:x 18, :y 217217.701110845} {:x 19, :y 213850.401458742} {:x 20, :y 212702.499847414} {:x 21, :y 214879.19952393} {:x 22, :y 214757.998657233} {:x 23, :y 216768.296508789} {:x 24, :y 218636.898498534} {:x 25, :y 221003.701629638} {:x 26, :y 222587.80136108} {:x 27, :y 221041.899414067} {:x 28, :y 218006.100769045} {:x 29, :y 217075.700073242} {:x 30, :y 217346.00082397502})}], :marks [{:type \"line\", :from {:data \"0dc70d56-80d5-4c65-b6cb-f2a03d9e5f43\"}, :properties {:enter {:x {:scale \"x\", :field \"data.x\"}, :y {:scale \"y\", :field \"data.y\"}, :stroke {:value \"#FF29D2\"}, :strokeWidth {:value 2}, :strokeOpacity {:value 1}}}}], :scales [{:name \"x\", :type \"linear\", :range \"width\", :zero false, :domain {:data \"0dc70d56-80d5-4c65-b6cb-f2a03d9e5f43\", :field \"data.x\"}} {:name \"y\", :type \"linear\", :range \"height\", :nice true, :zero false, :domain {:data \"0dc70d56-80d5-4c65-b6cb-f2a03d9e5f43\", :field \"data.y\"}}], :axes [{:type \"x\", :scale \"x\"} {:type \"y\", :scale \"y\"}]}}"}
;; <=

;; @@

;; @@
