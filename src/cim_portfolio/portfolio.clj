;; gorilla-repl.fileformat = 1

;; **
;;; # CIM Portfolio
;; **

;; **
;;; ### Required packages
;; **

;; @@
(ns cim_portfolio.portfolio
  (:require [cim_portfolio.util :as util]
            [cim_portfolio.yfinanceclient :as client]
            [cim_portfolio.plot :as plot]
            [clojure.math :as math]
            ))
;; @@
;; =>
;;; {"type":"html","content":"<span class='clj-nil'>nil</span>","value":"nil"}
;; <=

;; **
;;; ### Portfolio Analysis Helper Functions
;; **

;; @@
;; Computes arithmetic, log, and cumulative return for a given list of prices
(defn calculate-returns [prices]
  (let [price-changes (map #(double (/ (second %) (first %))) (partition 2 1 prices))
        arithmetic-returns (mapv #(- % 1.0) price-changes)
        log-returns (mapv #(Math/log %) price-changes)
        cumulative-log-return (reduce + log-returns)]
    {
     :cumulative-return cumulative-log-return
     :arithmetic-returns arithmetic-returns
     :log-returns log-returns
     }))

;; Variation of the above function - additionally associates the returns with their corresponding date
(defn calculate-returns-with-corresponding-date [prices dates]
  (let [price-changes (map #(double (/ (second %) (first %))) (partition 2 1 prices))
        arithmetic-returns (mapv #(- % 1.0) price-changes)
        log-returns (mapv #(Math/log %) price-changes)
        cumulative-log-return (reduce + log-returns)]
    {
     :cumulative-return cumulative-log-return
     :arithmetic-returns (util/sort-map-by-date (zipmap (rest dates) arithmetic-returns))
     :log-returns (util/sort-map-by-date (zipmap (rest dates) log-returns))
     }))

;; Calculates portfolio return - accepts map {:stock cash-invested} and stock-performance generated by calculate-returns
(defn calculate-portfolio-return [cash-invested returns]
  (let [total-investment (apply + (vals cash-invested))]
    (->> cash-invested
         (map (fn [[security invested]]
                (let [weight (/ invested total-investment)
                      return (:cumulative-return (get returns security))]
                  (* weight return))))
         (apply +))))

;; Calculates cumulative return UP TILL a given date
(defn get-cumulative-return-till-given-date [cumulative-returns date]
  (util/sum-up-to-key date cumulative-returns)
)

;; Only calculates portfolio return up till a given date
(defn calculate-portfolio-return-for-given-date [cash-invested returns date]
  (let [total-investment (apply + (vals cash-invested))]
    (->> cash-invested
         (map (fn [[security invested]]
                (let [weight (/ invested total-investment)
                      return (get-cumulative-return-till-given-date (:log-returns (get returns security)) date)
                     ]
                  (* weight return))))
         (apply +))))

; Calculates the annualized return of the portfolio (accepts the starting value, ending value of portfolio, the start and end date)
(defn calculate-annualized-return [starting-value ending-value start-date end-date]
  (let [return (/ (- ending-value starting-value) starting-value)
        number-of-days (util/number-of-days-between start-date end-date)
       ]
    (- (math/pow (+ 1 return) (/ 365 number-of-days)) 1)
  )
)

; Calculates the volatility of a given list of prices (expected input: portfolio value list)
(defn volatility [prices]
  (let [daily-returns (:arithmetic-returns (calculate-returns prices))
        volatility (* 100 (util/std-dev daily-returns))
       ]
    volatility
  )
)

; Calculates the volatility for a given sliding window-size
(defn rolling-volatility [prices window-size]
  (let [returns (:arithmetic-returns (calculate-returns prices))]
    (->> returns
         (partition window-size 1)
         (map util/std-dev)
      	 (map #(* 100 %))
    )
  )
)
;; @@
;; =>
;;; {"type":"html","content":"<span class='clj-var'>#&#x27;cim_portfolio.portfolio/rolling-volatility</span>","value":"#'cim_portfolio.portfolio/rolling-volatility"}
;; <=

;; @@
(def test-prices [100 105 110 103 108 115])

(println test-prices)

(:arithmetic-returns (calculate-returns test-prices)) ;; Daily returns (as percentage of change)

(rolling-volatility test-prices 3)
;; @@
;; ->
;;; [100 105 110 103 108 115]
;;; 
;; <-
;; =>
;;; {"type":"list-like","open":"<span class='clj-lazy-seq'>(</span>","close":"<span class='clj-lazy-seq'>)</span>","separator":" ","items":[{"type":"html","content":"<span class='clj-double'>6.493157758793351</span>","value":"6.493157758793351"},{"type":"html","content":"<span class='clj-double'>6.450191958030683</span>","value":"6.450191958030683"},{"type":"html","content":"<span class='clj-double'>6.993904375922838</span>","value":"6.993904375922838"}],"value":"(6.493157758793351 6.450191958030683 6.993904375922838)"}
;; <=

;; @@
(calculate-returns test-prices)
;; @@
;; =>
;;; {"type":"list-like","open":"<span class='clj-map'>{</span>","close":"<span class='clj-map'>}</span>","separator":", ","items":[{"type":"list-like","open":"","close":"","separator":" ","items":[{"type":"html","content":"<span class='clj-keyword'>:cumulative-return</span>","value":":cumulative-return"},{"type":"html","content":"<span class='clj-double'>0.1397619423751591</span>","value":"0.1397619423751591"}],"value":"[:cumulative-return 0.1397619423751591]"},{"type":"list-like","open":"","close":"","separator":" ","items":[{"type":"html","content":"<span class='clj-keyword'>:arithmetic-returns</span>","value":":arithmetic-returns"},{"type":"list-like","open":"<span class='clj-vector'>[</span>","close":"<span class='clj-vector'>]</span>","separator":" ","items":[{"type":"html","content":"<span class='clj-double'>0.050000000000000044</span>","value":"0.050000000000000044"},{"type":"html","content":"<span class='clj-double'>0.047619047619047894</span>","value":"0.047619047619047894"},{"type":"html","content":"<span class='clj-double'>-0.0636363636363636</span>","value":"-0.0636363636363636"},{"type":"html","content":"<span class='clj-double'>0.048543689320388106</span>","value":"0.048543689320388106"},{"type":"html","content":"<span class='clj-double'>0.0648148148148151</span>","value":"0.0648148148148151"}],"value":"[0.050000000000000044 0.047619047619047894 -0.0636363636363636 0.048543689320388106 0.0648148148148151]"}],"value":"[:arithmetic-returns [0.050000000000000044 0.047619047619047894 -0.0636363636363636 0.048543689320388106 0.0648148148148151]]"},{"type":"list-like","open":"","close":"","separator":" ","items":[{"type":"html","content":"<span class='clj-keyword'>:log-returns</span>","value":":log-returns"},{"type":"list-like","open":"<span class='clj-vector'>[</span>","close":"<span class='clj-vector'>]</span>","separator":" ","items":[{"type":"html","content":"<span class='clj-double'>0.04879016416943205</span>","value":"0.04879016416943205"},{"type":"html","content":"<span class='clj-double'>0.04652001563489312</span>","value":"0.04652001563489312"},{"type":"html","content":"<span class='clj-double'>-0.06575137756278042</span>","value":"-0.06575137756278042"},{"type":"html","content":"<span class='clj-double'>0.04740223889458369</span>","value":"0.04740223889458369"},{"type":"html","content":"<span class='clj-double'>0.06280090123903065</span>","value":"0.06280090123903065"}],"value":"[0.04879016416943205 0.04652001563489312 -0.06575137756278042 0.04740223889458369 0.06280090123903065]"}],"value":"[:log-returns [0.04879016416943205 0.04652001563489312 -0.06575137756278042 0.04740223889458369 0.06280090123903065]]"}],"value":"{:cumulative-return 0.1397619423751591, :arithmetic-returns [0.050000000000000044 0.047619047619047894 -0.0636363636363636 0.048543689320388106 0.0648148148148151], :log-returns [0.04879016416943205 0.04652001563489312 -0.06575137756278042 0.04740223889458369 0.06280090123903065]}"}
;; <=

;; @@
(calculate-annualized-return 2000 2500 "2023-10-16" "2024-04-27")
;; @@
;; =>
;;; {"type":"html","content":"<span class='clj-double'>0.5217057952294997</span>","value":"0.5217057952294997"}
;; <=

;; **
;;; ### YFinance API
;; **

;; @@
(client/get-ticker-price-all "NVDA" "2024-06-25")
;; @@
;; =>
;;; {"type":"list-like","open":"<span class='clj-vector'>[</span>","close":"<span class='clj-vector'>]</span>","separator":" ","items":[{"type":"list-like","open":"<span class='clj-vector'>[</span>","close":"<span class='clj-vector'>]</span>","separator":" ","items":[{"type":"html","content":"<span class='clj-string'>&quot;2024-06-26&quot;</span>","value":"\"2024-06-26\""},{"type":"html","content":"<span class='clj-double'>126.1299972534</span>","value":"126.1299972534"},{"type":"html","content":"<span class='clj-double'>126.4000015259</span>","value":"126.4000015259"}],"value":"[\"2024-06-26\" 126.1299972534 126.4000015259]"},{"type":"list-like","open":"<span class='clj-vector'>[</span>","close":"<span class='clj-vector'>]</span>","separator":" ","items":[{"type":"html","content":"<span class='clj-string'>&quot;2024-06-27&quot;</span>","value":"\"2024-06-27\""},{"type":"html","content":"<span class='clj-double'>124.0999984741</span>","value":"124.0999984741"},{"type":"html","content":"<span class='clj-double'>123.9899978638</span>","value":"123.9899978638"}],"value":"[\"2024-06-27\" 124.0999984741 123.9899978638]"}],"value":"[[\"2024-06-26\" 126.1299972534 126.4000015259] [\"2024-06-27\" 124.0999984741 123.9899978638]]"}
;; <=

;; **
;;; ### Portfolio Processing Section
;; **

;; @@
(defn analyze-portfolio [data]
  (loop [cash 0.0
         portfolio {}
         portfolio-value {}
         current-value 0.0
         stock-performance {}
         cash-invested {}
         cash-invested-by-date {}
         data (rest data)]
    (if (empty? data)
      [cash portfolio portfolio-value current-value cash-invested cash-invested-by-date stock-performance]
      (let [[date action amount ticker] (first data)
            ticker-prices (client/get-ticker-price-all ticker (util/parse-date date))
            executed-date (first (first ticker-prices))				; gets the date the buy/sell order is executed
            ]
        (cond
          (= action "buy")
          (if (pos? (Double. amount))
            (let [price (second (first ticker-prices))        	; Gets open price of next trading day
                  currPrice (nth (last ticker-prices) 2)		; Gets adj close price of latest day
                  prices (mapv #(nth % 2) ticker-prices)       	; Extracts the prices from ticker-prices
                  amounts (repeatedly (count prices) #(Double. amount))	; Creates a sequence of amounts matching the number of prices
                  trading-dates (mapv #(first %) ticker-prices)
                  ]
              (recur (- cash (* (Double. amount) price))
                     (assoc portfolio ticker (+ (get portfolio ticker 0) (Double. amount)))
                     (merge-with + portfolio-value (zipmap (map first ticker-prices) (map #(- % (* (Double. amount) price))(map * prices amounts)))) ; Updates portfolio-value with the calculated values
                     (+ current-value (* (Double. amount) currPrice))
                     
                     (assoc stock-performance ticker (calculate-returns-with-corresponding-date prices trading-dates))
                     (assoc cash-invested ticker (+ (get cash-invested ticker 0) (* (Double. amount) price)))
                     (assoc cash-invested-by-date executed-date (assoc cash-invested ticker (+ (get cash-invested ticker 0) (* (Double. amount) price))))
                     (rest data)))
            (recur cash portfolio portfolio-value current-value cash-invested cash-invested-by-date stock-performance (rest data)))

          (= action "sell")
          (let [price (second (first ticker-prices))
                currPrice (second (last ticker-prices))
                prices (map second ticker-prices)
                amounts (repeatedly (count prices) #(Double. amount))
                trading-dates (mapv #(first %) ticker-prices)
                ]
            (recur (+ cash (* (Double. amount) price))
                   (assoc portfolio ticker (- (get portfolio ticker 0) (Double. amount)))
                   (merge-with + portfolio-value (zipmap (map first ticker-prices) (map #(- % (* (Double. amount) price))(map * prices amounts)))) ; Updates portfolio-value with the calculated values
                   (- current-value (* (Double. amount) currPrice))
                   
                   (assoc stock-performance ticker (calculate-returns-with-corresponding-date prices trading-dates))
                   (assoc cash-invested ticker (- (get cash-invested ticker 0) (* (Double. amount) price)))
                   (assoc cash-invested-by-date executed-date (assoc cash-invested ticker (- (get cash-invested ticker 0) (* (Double. amount) price))))
                   (rest data)))
          )))))
;; @@
;; =>
;;; {"type":"html","content":"<span class='clj-var'>#&#x27;cim_portfolio.portfolio/analyze-portfolio</span>","value":"#'cim_portfolio.portfolio/analyze-portfolio"}
;; <=

;; @@
(def portfolio-options {
                        :starting-cash 200000
                       }
)

(def view-options {
                   :show-individual-stock-performance-by-day 	false
                   :show-cumulative-portfolio-return-by-day		true
                   :show-portfolio-value-by-day					true
                  }
)
;; @@
;; =>
;;; {"type":"html","content":"<span class='clj-var'>#&#x27;cim_portfolio.portfolio/view-options</span>","value":"#'cim_portfolio.portfolio/view-options"}
;; <=

;; @@
;; Please enter the relative paths of 1 or more CSV files (in a list) containing your trades below:

(def input-files ["examples/testPortfolio1.csv" "examples/testPortfolio.csv"])

(let [data (util/read-multiple-csv input-files)
      [cash portfolio portfolio-value current-value cash-invested cash-invested-by-date stock-performance] (analyze-portfolio data)
      sorted-portfolio-value 	(map #(vector (first %) (+ (:starting-cash portfolio-options) (second %))) (util/sort-map-by-date portfolio-value))
      cash-invested-by-dates 	(into [] cash-invested-by-date)
      current-portfolio-value 	(+ (:starting-cash portfolio-options) (+ cash current-value))
      annualized-return 		(calculate-annualized-return (:starting-cash portfolio-options) current-portfolio-value (first (first sorted-portfolio-value)) (last (last sorted-portfolio-value)))
      cumulative-portfolio-return (calculate-portfolio-return cash-invested stock-performance)
      returns-by-date 			(zipmap (map #(first %) cash-invested-by-date)(mapv #(calculate-portfolio-return-for-given-date (second %) stock-performance (first %)) cash-invested-by-dates))
      volatility 				(volatility (map second sorted-portfolio-value))
      ]
  (def portfolio-value-by-day sorted-portfolio-value)
  
  (println "Current Portfolio Value: $" (format "%.2f" current-portfolio-value) "\n")
  
  (println "Annualized Return of portfolio:" (format "%.2f" (* annualized-return 100)) "%\n")
  (println "Volatility of portfolio:" (format "%.4f" volatility) "%\n")
  (println "Annualized volatility of portfolio:" (format "%.4f" (* (Math/sqrt 252) volatility)) "%\n")
  (println "Cash On Hand (excluding value of portfolio): $" (format "%.2f"(+ (:starting-cash portfolio-options) cash)) "\n")
  (println "Portfolio (units held of each stock):" portfolio "\n")
  (println "Cash invested in each stock: " cash-invested "\n")
  (println "Cumulative Portfolio Return: " cumulative-portfolio-return "\n")
  
  (println "----------------------------------")
  (if (:show-cumulative-portfolio-return-by-day view-options) (println "Portfolio Return by date: \n" returns-by-date))
  (println "----------------------------------\n")
  
  (println "----------------------------------")
  (println "Portfolio Value Day-by-Day: ")
  (if (:show-portfolio-value-by-day view-options) 
    (run! println (map #(vector (first %) (format "%.2f" (second %))) sorted-portfolio-value))
    (println "Omitting...")
  )
  (println "----------------------------------\n")
  
  (println "----------------------------------")
  (println "Individual Stock Performance: ")
  (if (:show-individual-stock-performance-by-day view-options) 
    (clojure.pprint/pprint stock-performance)
    (println "Omitting...")
  )
  (println "----------------------------------\n")
)
;; @@
;; ->
;;; Current Portfolio Value: $ 224280.67 
;;; 
;;; Annualized Return of portfolio: 17.75 %
;;; 
;;; Volatility of portfolio: 0.3683 %
;;; 
;;; Annualized volatility of portfolio: 5.8466 %
;;; 
;;; Cash On Hand (excluding value of portfolio): $ 66643.17 
;;; 
;;; Portfolio (units held of each stock): {IEF 100.0, NVDA 70.0, SHY 170.0, RSP 35.0, SPY 150.0, GOOG 50.0, TSLA -30.0, GSG 250.0, AGG 300.0} 
;;; 
;;; Cash invested in each stock:  {IEF 9070.99990845, NVDA 4817.129821775, SHY 13787.499618528002, RSP 4944.7999572755, SPY 65155.500793454994, GOOG 7172.49984741, TSLA -6015.600128175, GSG 5449.999809275, AGG 28974.00054933} 
;;; 
;;; Cumulative Portfolio Return:  0.1643341303871607 
;;; 
;;; ----------------------------------
;;; Portfolio Return by date: 
;;;  {2024-02-16 0.3655846421421286, 2024-02-26 0.32851790460256836, 2024-03-01 0.3311517534690619, 2024-03-11 0.430919720290168, 2023-10-16 0.23900526947640485, 2023-11-06 0.19037023870359165, 2023-12-04 0.061905671245059024}
;;; ----------------------------------
;;; 
;;; ----------------------------------
;;; Portfolio Value Day-by-Day: 
;;; [2023-10-16 199497.70]
;;; [2023-10-17 199429.38]
;;; [2023-10-18 198735.15]
;;; [2023-10-19 198260.00]
;;; [2023-10-20 197734.97]
;;; [2023-10-23 197674.68]
;;; [2023-10-24 198033.75]
;;; [2023-10-25 197300.80]
;;; [2023-10-26 196865.89]
;;; [2023-10-27 196641.54]
;;; [2023-10-30 197133.87]
;;; [2023-10-31 197411.74]
;;; [2023-11-01 197973.47]
;;; [2023-11-02 198934.66]
;;; [2023-11-03 199475.39]
;;; [2023-11-06 198971.78]
;;; [2023-11-07 199053.96]
;;; [2023-11-08 199056.47]
;;; [2023-11-09 198374.90]
;;; [2023-11-10 199499.42]
;;; [2023-11-13 199518.43]
;;; [2023-11-14 201102.45]
;;; [2023-11-15 201133.94]
;;; [2023-11-16 201137.44]
;;; [2023-11-17 201335.69]
;;; [2023-11-20 201955.29]
;;; [2023-11-21 201844.06]
;;; [2023-11-22 202073.59]
;;; [2023-11-24 202020.47]
;;; [2023-11-27 201921.15]
;;; [2023-11-28 202125.76]
;;; [2023-11-29 202225.48]
;;; [2023-11-30 202383.51]
;;; [2023-12-01 202939.92]
;;; [2023-12-04 201934.69]
;;; [2023-12-05 202107.65]
;;; [2023-12-06 201804.90]
;;; [2023-12-07 202374.94]
;;; [2023-12-08 202501.76]
;;; [2023-12-11 202811.08]
;;; [2023-12-12 203137.94]
;;; [2023-12-13 204817.76]
;;; [2023-12-14 205550.81]
;;; [2023-12-15 205323.28]
;;; [2023-12-18 205680.20]
;;; [2023-12-19 206261.71]
;;; [2023-12-20 205309.30]
;;; [2023-12-21 206057.71]
;;; [2023-12-22 206155.44]
;;; [2023-12-26 206615.61]
;;; [2023-12-27 206990.87]
;;; [2023-12-28 206851.68]
;;; [2023-12-29 206521.69]
;;; [2024-01-02 205883.31]
;;; [2024-01-03 205367.88]
;;; [2024-01-04 204935.02]
;;; [2024-01-05 204975.21]
;;; [2024-01-08 206086.48]
;;; [2024-01-09 206002.38]
;;; [2024-01-10 206300.28]
;;; [2024-01-11 206558.43]
;;; [2024-01-12 206712.74]
;;; [2024-01-16 206062.68]
;;; [2024-01-17 205494.69]
;;; [2024-01-18 206160.04]
;;; [2024-01-19 207078.59]
;;; [2024-01-22 207385.08]
;;; [2024-01-23 207524.25]
;;; [2024-01-24 207521.81]
;;; [2024-01-25 208237.87]
;;; [2024-01-26 208136.01]
;;; [2024-01-29 208872.03]
;;; [2024-01-30 208922.04]
;;; [2024-01-31 207829.60]
;;; [2024-02-01 209006.07]
;;; [2024-02-02 209263.44]
;;; [2024-02-05 208614.07]
;;; [2024-02-06 209114.98]
;;; [2024-02-07 209701.99]
;;; [2024-02-08 209701.51]
;;; [2024-02-09 210116.65]
;;; [2024-02-12 210147.86]
;;; [2024-02-13 208606.34]
;;; [2024-02-14 209450.28]
;;; [2024-02-15 210178.71]
;;; [2024-02-16 209506.90]
;;; [2024-02-20 208791.48]
;;; [2024-02-21 208566.83]
;;; [2024-02-22 211302.78]
;;; [2024-02-23 211478.69]
;;; [2024-02-26 210924.84]
;;; [2024-02-27 211101.14]
;;; [2024-02-28 210839.58]
;;; [2024-02-29 211475.96]
;;; [2024-03-01 212723.75]
;;; [2024-03-04 212574.85]
;;; [2024-03-05 211552.50]
;;; [2024-03-06 212199.46]
;;; [2024-03-07 213472.59]
;;; [2024-03-08 212761.22]
;;; [2024-03-11 212452.02]
;;; [2024-03-12 213918.83]
;;; [2024-03-13 213705.83]
;;; [2024-03-14 212945.29]
;;; [2024-03-15 212065.59]
;;; [2024-03-18 213254.35]
;;; [2024-03-19 213850.41]
;;; [2024-03-20 214970.80]
;;; [2024-03-21 215513.15]
;;; [2024-03-22 215566.26]
;;; [2024-03-25 215484.81]
;;; [2024-03-26 215475.46]
;;; [2024-03-27 216154.67]
;;; [2024-03-28 215979.20]
;;; [2024-04-01 215706.01]
;;; [2024-04-02 214656.90]
;;; [2024-04-03 214785.20]
;;; [2024-04-04 213646.43]
;;; [2024-04-05 214447.44]
;;; [2024-04-08 214522.54]
;;; [2024-04-09 214745.31]
;;; [2024-04-10 213411.56]
;;; [2024-04-11 214574.05]
;;; [2024-04-12 213258.08]
;;; [2024-04-15 211585.88]
;;; [2024-04-16 210922.53]
;;; [2024-04-17 210354.62]
;;; [2024-04-18 209873.58]
;;; [2024-04-19 208275.79]
;;; [2024-04-22 209072.73]
;;; [2024-04-23 210677.01]
;;; [2024-04-24 210981.79]
;;; [2024-04-25 210471.74]
;;; [2024-04-26 213010.13]
;;; [2024-04-29 213842.08]
;;; [2024-04-30 211943.65]
;;; [2024-05-01 211230.48]
;;; [2024-05-02 212592.91]
;;; [2024-05-03 214186.95]
;;; [2024-05-06 215570.74]
;;; [2024-05-07 215762.92]
;;; [2024-05-08 215199.52]
;;; [2024-05-09 215802.77]
;;; [2024-05-10 215758.92]
;;; [2024-05-13 215826.05]
;;; [2024-05-14 216540.40]
;;; [2024-05-15 218547.71]
;;; [2024-05-16 218286.26]
;;; [2024-05-17 218213.19]
;;; [2024-05-20 218668.00]
;;; [2024-05-21 218972.97]
;;; [2024-05-22 218759.37]
;;; [2024-05-23 218857.31]
;;; [2024-05-24 219689.81]
;;; [2024-05-28 220667.44]
;;; [2024-05-29 219894.16]
;;; [2024-05-30 219072.13]
;;; [2024-05-31 219848.19]
;;; [2024-06-03 220614.20]
;;; [2024-06-04 220941.09]
;;; [2024-06-05 222883.91]
;;; [2024-06-06 223023.01]
;;; [2024-06-07 222236.70]
;;; [2024-06-10 222704.02]
;;; [2024-06-11 223005.30]
;;; [2024-06-12 224381.25]
;;; [2024-06-13 225761.94]
;;; [2024-06-14 226076.28]
;;; [2024-06-17 226428.57]
;;; [2024-06-18 227400.10]
;;; [2024-06-20 226897.10]
;;; [2024-06-21 226007.08]
;;; [2024-06-24 224997.23]
;;; [2024-06-25 226171.73]
;;; [2024-06-26 226284.53]
;;; [2024-06-27 226581.23]
;;; [2024-06-28 226408.93]
;;; ----------------------------------
;;; 
;;; ----------------------------------
;;; Individual Stock Performance: 
;;; Omitting...
;;; ----------------------------------
;;; 
;;; 
;; <-
;; =>
;;; {"type":"html","content":"<span class='clj-nil'>nil</span>","value":"nil"}
;; <=

;; **
;;; ### Visualization
;;; 
;;; #### Portfolio Value
;; **

;; @@
(plot/list-plot (cons (:starting-cash portfolio-options) (map #(second %) portfolio-value-by-day)) :joined true :plot-size 800 :x-title "Day" :y-title "Portfolio Value (in $)" :color "#7f3b08")
;; @@
;; =>
;;; {"type":"vega","content":{"width":800,"height":494.4376,"padding":{"top":10,"left":80,"bottom":50,"right":10},"data":[{"name":"3db7b156-08da-44b7-9b05-f2555a2c1e84","values":[{"x":0,"y":200000},{"x":1,"y":199497.6980590785},{"x":2,"y":199429.3811035055},{"x":3,"y":198735.1520538305},{"x":4,"y":198259.996414183},{"x":5,"y":197734.965515137},{"x":6,"y":197674.6812438985},{"x":7,"y":198033.754882815},{"x":8,"y":197300.796890256},{"x":9,"y":196865.8922576905},{"x":10,"y":196641.5390777605},{"x":11,"y":197133.8667297425},{"x":12,"y":197411.73858641498},{"x":13,"y":197973.4689331075},{"x":14,"y":198934.6607208215},{"x":15,"y":199475.394058231},{"x":16,"y":198971.77818296402},{"x":17,"y":199053.9550018215},{"x":18,"y":199056.466064467},{"x":19,"y":198374.900264725},{"x":20,"y":199499.42155836802},{"x":21,"y":199518.4324073915},{"x":22,"y":201102.454032893},{"x":23,"y":201133.94483564602},{"x":24,"y":201137.4397850065},{"x":25,"y":201335.6898498465},{"x":26,"y":201955.287418354},{"x":27,"y":201844.061241156},{"x":28,"y":202073.593692774},{"x":29,"y":202020.4733467025},{"x":30,"y":201921.14753723},{"x":31,"y":202125.7644271875},{"x":32,"y":202225.4774093475},{"x":33,"y":202383.51192473748},{"x":34,"y":202939.918422686},{"x":35,"y":201934.692401869},{"x":36,"y":202107.647438038},{"x":37,"y":201804.902439099},{"x":38,"y":202374.93572234848},{"x":39,"y":202501.756038636},{"x":40,"y":202811.0819053465},{"x":41,"y":203137.9433631735},{"x":42,"y":204817.7617263555},{"x":43,"y":205550.8077430435},{"x":44,"y":205323.2843970945},{"x":45,"y":205680.2044295835},{"x":46,"y":206261.70707702352},{"x":47,"y":205309.302425356},{"x":48,"y":206057.705306993},{"x":49,"y":206155.4371070635},{"x":50,"y":206615.61456678848},{"x":51,"y":206990.871810864},{"x":52,"y":206851.679420461},{"x":53,"y":206521.6906547165},{"x":54,"y":205883.3119010855},{"x":55,"y":205367.8848648085},{"x":56,"y":204935.016498557},{"x":57,"y":204975.211353277},{"x":58,"y":206086.4770507355},{"x":59,"y":206002.3838424655},{"x":60,"y":206300.2796173135},{"x":61,"y":206558.428840612},{"x":62,"y":206712.7428817385},{"x":63,"y":206062.6807784715},{"x":64,"y":205494.6918487455},{"x":65,"y":206160.0417518305},{"x":66,"y":207078.588924396},{"x":67,"y":207385.07534024},{"x":68,"y":207524.25453182848},{"x":69,"y":207521.807785024},{"x":70,"y":208237.867946596},{"x":71,"y":208136.014671325},{"x":72,"y":208872.02941892899},{"x":73,"y":208922.0376586715},{"x":74,"y":207829.60237499798},{"x":75,"y":209006.073722798},{"x":76,"y":209263.4394263955},{"x":77,"y":208614.0666389655},{"x":78,"y":209114.975280736},{"x":79,"y":209701.986484517},{"x":80,"y":209701.5140342375},{"x":81,"y":210116.6512679755},{"x":82,"y":210147.855567931},{"x":83,"y":208606.33699414402},{"x":84,"y":209450.275249468},{"x":85,"y":210178.710498801},{"x":86,"y":209506.900596593},{"x":87,"y":208791.480140649},{"x":88,"y":208566.82929992452},{"x":89,"y":211302.7774047635},{"x":90,"y":211478.685722353},{"x":91,"y":210924.8403930605},{"x":92,"y":211101.1374092235},{"x":93,"y":210839.578762036},{"x":94,"y":211475.9561347595},{"x":95,"y":212723.75059125602},{"x":96,"y":212574.8450469825},{"x":97,"y":211552.5030136115},{"x":98,"y":212199.4600677245},{"x":99,"y":213472.5856780815},{"x":100,"y":212761.219806677},{"x":101,"y":212452.02100749948},{"x":102,"y":213918.826351117},{"x":103,"y":213705.8270645045},{"x":104,"y":212945.28917310148},{"x":105,"y":212065.594463305},{"x":106,"y":213254.3450736935},{"x":107,"y":213850.41273116152},{"x":108,"y":214970.802040112},{"x":109,"y":215513.14855574298},{"x":110,"y":215566.25671386402},{"x":111,"y":215484.81262202698},{"x":112,"y":215475.4565238815},{"x":113,"y":216154.665546405},{"x":114,"y":215979.197368583},{"x":115,"y":215706.0138129945},{"x":116,"y":214656.8983840845},{"x":117,"y":214785.203227972},{"x":118,"y":213646.4337921095},{"x":119,"y":214447.4374389445},{"x":120,"y":214522.544174174},{"x":121,"y":214745.313758858},{"x":122,"y":213411.5625571925},{"x":123,"y":214574.045772522},{"x":124,"y":213258.0795478655},{"x":125,"y":211585.882244096},{"x":126,"y":210922.52540584898},{"x":127,"y":210354.618988046},{"x":128,"y":209873.5804366785},{"x":129,"y":208275.7891273565},{"x":130,"y":209072.72586820752},{"x":131,"y":210677.006587949},{"x":132,"y":210981.791133836},{"x":133,"y":210471.73755645799},{"x":134,"y":213010.127391799},{"x":135,"y":213842.0833587415},{"x":136,"y":211943.654785136},{"x":137,"y":211230.48189159698},{"x":138,"y":212592.90737153048},{"x":139,"y":214186.946163165},{"x":140,"y":215570.74459072098},{"x":141,"y":215762.91524883598},{"x":142,"y":215199.52308654902},{"x":143,"y":215802.7690696555},{"x":144,"y":215758.92339704},{"x":145,"y":215826.0486030315},{"x":146,"y":216540.397911058},{"x":147,"y":218547.706527695},{"x":148,"y":218286.258277887},{"x":149,"y":218213.1894302195},{"x":150,"y":218667.9995727445},{"x":151,"y":218972.966480241},{"x":152,"y":218759.3721007735},{"x":153,"y":218857.3094749455},{"x":154,"y":219689.8089790485},{"x":155,"y":220667.441921221},{"x":156,"y":219894.1591262455},{"x":157,"y":219072.125034323},{"x":158,"y":219848.19015499},{"x":159,"y":220614.2026519985},{"x":160,"y":220941.08949659},{"x":161,"y":222883.9053344345},{"x":162,"y":223023.0085372525},{"x":163,"y":222236.695232354},{"x":164,"y":222704.0226554625},{"x":165,"y":223005.3030204715},{"x":166,"y":224381.2506103495},{"x":167,"y":225761.93851468},{"x":168,"y":226076.282997106},{"x":169,"y":226428.5702323585},{"x":170,"y":227400.0965499435},{"x":171,"y":226897.0998001215},{"x":172,"y":226007.075672096},{"x":173,"y":224997.227077489},{"x":174,"y":226171.733016958},{"x":175,"y":226284.5313072},{"x":176,"y":226581.229400637},{"x":177,"y":226408.9310073545}]}],"marks":[{"type":"line","from":{"data":"3db7b156-08da-44b7-9b05-f2555a2c1e84"},"properties":{"enter":{"x":{"scale":"x","field":"data.x"},"y":{"scale":"y","field":"data.y"},"stroke":{"value":"#7f3b08"},"strokeWidth":{"value":3},"strokeOpacity":{"value":1}}}}],"scales":[{"name":"x","type":"linear","range":"width","zero":false,"domain":{"data":"3db7b156-08da-44b7-9b05-f2555a2c1e84","field":"data.x"}},{"name":"y","type":"linear","range":"height","nice":true,"zero":false,"domain":{"data":"3db7b156-08da-44b7-9b05-f2555a2c1e84","field":"data.y"}}],"axes":[{"type":"x","scale":"x","title":"Day","titleOffset":40,"grid":true},{"type":"y","scale":"y","title":"Portfolio Value (in $)","titleOffset":65,"grid":true}]},"value":"#gorilla_repl.vega.VegaView{:content {:width 800, :height 494.4376, :padding {:top 10, :left 80, :bottom 50, :right 10}, :data [{:name \"3db7b156-08da-44b7-9b05-f2555a2c1e84\", :values ({:x 0, :y 200000} {:x 1, :y 199497.6980590785} {:x 2, :y 199429.3811035055} {:x 3, :y 198735.1520538305} {:x 4, :y 198259.996414183} {:x 5, :y 197734.965515137} {:x 6, :y 197674.6812438985} {:x 7, :y 198033.754882815} {:x 8, :y 197300.796890256} {:x 9, :y 196865.8922576905} {:x 10, :y 196641.5390777605} {:x 11, :y 197133.8667297425} {:x 12, :y 197411.73858641498} {:x 13, :y 197973.4689331075} {:x 14, :y 198934.6607208215} {:x 15, :y 199475.394058231} {:x 16, :y 198971.77818296402} {:x 17, :y 199053.9550018215} {:x 18, :y 199056.466064467} {:x 19, :y 198374.900264725} {:x 20, :y 199499.42155836802} {:x 21, :y 199518.4324073915} {:x 22, :y 201102.454032893} {:x 23, :y 201133.94483564602} {:x 24, :y 201137.4397850065} {:x 25, :y 201335.6898498465} {:x 26, :y 201955.287418354} {:x 27, :y 201844.061241156} {:x 28, :y 202073.593692774} {:x 29, :y 202020.4733467025} {:x 30, :y 201921.14753723} {:x 31, :y 202125.7644271875} {:x 32, :y 202225.4774093475} {:x 33, :y 202383.51192473748} {:x 34, :y 202939.918422686} {:x 35, :y 201934.692401869} {:x 36, :y 202107.647438038} {:x 37, :y 201804.902439099} {:x 38, :y 202374.93572234848} {:x 39, :y 202501.756038636} {:x 40, :y 202811.0819053465} {:x 41, :y 203137.9433631735} {:x 42, :y 204817.7617263555} {:x 43, :y 205550.8077430435} {:x 44, :y 205323.2843970945} {:x 45, :y 205680.2044295835} {:x 46, :y 206261.70707702352} {:x 47, :y 205309.302425356} {:x 48, :y 206057.705306993} {:x 49, :y 206155.4371070635} {:x 50, :y 206615.61456678848} {:x 51, :y 206990.871810864} {:x 52, :y 206851.679420461} {:x 53, :y 206521.6906547165} {:x 54, :y 205883.3119010855} {:x 55, :y 205367.8848648085} {:x 56, :y 204935.016498557} {:x 57, :y 204975.211353277} {:x 58, :y 206086.4770507355} {:x 59, :y 206002.3838424655} {:x 60, :y 206300.2796173135} {:x 61, :y 206558.428840612} {:x 62, :y 206712.7428817385} {:x 63, :y 206062.6807784715} {:x 64, :y 205494.6918487455} {:x 65, :y 206160.0417518305} {:x 66, :y 207078.588924396} {:x 67, :y 207385.07534024} {:x 68, :y 207524.25453182848} {:x 69, :y 207521.807785024} {:x 70, :y 208237.867946596} {:x 71, :y 208136.014671325} {:x 72, :y 208872.02941892899} {:x 73, :y 208922.0376586715} {:x 74, :y 207829.60237499798} {:x 75, :y 209006.073722798} {:x 76, :y 209263.4394263955} {:x 77, :y 208614.0666389655} {:x 78, :y 209114.975280736} {:x 79, :y 209701.986484517} {:x 80, :y 209701.5140342375} {:x 81, :y 210116.6512679755} {:x 82, :y 210147.855567931} {:x 83, :y 208606.33699414402} {:x 84, :y 209450.275249468} {:x 85, :y 210178.710498801} {:x 86, :y 209506.900596593} {:x 87, :y 208791.480140649} {:x 88, :y 208566.82929992452} {:x 89, :y 211302.7774047635} {:x 90, :y 211478.685722353} {:x 91, :y 210924.8403930605} {:x 92, :y 211101.1374092235} {:x 93, :y 210839.578762036} {:x 94, :y 211475.9561347595} {:x 95, :y 212723.75059125602} {:x 96, :y 212574.8450469825} {:x 97, :y 211552.5030136115} {:x 98, :y 212199.4600677245} {:x 99, :y 213472.5856780815} {:x 100, :y 212761.219806677} {:x 101, :y 212452.02100749948} {:x 102, :y 213918.826351117} {:x 103, :y 213705.8270645045} {:x 104, :y 212945.28917310148} {:x 105, :y 212065.594463305} {:x 106, :y 213254.3450736935} {:x 107, :y 213850.41273116152} {:x 108, :y 214970.802040112} {:x 109, :y 215513.14855574298} {:x 110, :y 215566.25671386402} {:x 111, :y 215484.81262202698} {:x 112, :y 215475.4565238815} {:x 113, :y 216154.665546405} {:x 114, :y 215979.197368583} {:x 115, :y 215706.0138129945} {:x 116, :y 214656.8983840845} {:x 117, :y 214785.203227972} {:x 118, :y 213646.4337921095} {:x 119, :y 214447.4374389445} {:x 120, :y 214522.544174174} {:x 121, :y 214745.313758858} {:x 122, :y 213411.5625571925} {:x 123, :y 214574.045772522} {:x 124, :y 213258.0795478655} {:x 125, :y 211585.882244096} {:x 126, :y 210922.52540584898} {:x 127, :y 210354.618988046} {:x 128, :y 209873.5804366785} {:x 129, :y 208275.7891273565} {:x 130, :y 209072.72586820752} {:x 131, :y 210677.006587949} {:x 132, :y 210981.791133836} {:x 133, :y 210471.73755645799} {:x 134, :y 213010.127391799} {:x 135, :y 213842.0833587415} {:x 136, :y 211943.654785136} {:x 137, :y 211230.48189159698} {:x 138, :y 212592.90737153048} {:x 139, :y 214186.946163165} {:x 140, :y 215570.74459072098} {:x 141, :y 215762.91524883598} {:x 142, :y 215199.52308654902} {:x 143, :y 215802.7690696555} {:x 144, :y 215758.92339704} {:x 145, :y 215826.0486030315} {:x 146, :y 216540.397911058} {:x 147, :y 218547.706527695} {:x 148, :y 218286.258277887} {:x 149, :y 218213.1894302195} {:x 150, :y 218667.9995727445} {:x 151, :y 218972.966480241} {:x 152, :y 218759.3721007735} {:x 153, :y 218857.3094749455} {:x 154, :y 219689.8089790485} {:x 155, :y 220667.441921221} {:x 156, :y 219894.1591262455} {:x 157, :y 219072.125034323} {:x 158, :y 219848.19015499} {:x 159, :y 220614.2026519985} {:x 160, :y 220941.08949659} {:x 161, :y 222883.9053344345} {:x 162, :y 223023.0085372525} {:x 163, :y 222236.695232354} {:x 164, :y 222704.0226554625} {:x 165, :y 223005.3030204715} {:x 166, :y 224381.2506103495} {:x 167, :y 225761.93851468} {:x 168, :y 226076.282997106} {:x 169, :y 226428.5702323585} {:x 170, :y 227400.0965499435} {:x 171, :y 226897.0998001215} {:x 172, :y 226007.075672096} {:x 173, :y 224997.227077489} {:x 174, :y 226171.733016958} {:x 175, :y 226284.5313072} {:x 176, :y 226581.229400637} {:x 177, :y 226408.9310073545})}], :marks [{:type \"line\", :from {:data \"3db7b156-08da-44b7-9b05-f2555a2c1e84\"}, :properties {:enter {:x {:scale \"x\", :field \"data.x\"}, :y {:scale \"y\", :field \"data.y\"}, :stroke {:value \"#7f3b08\"}, :strokeWidth {:value 3}, :strokeOpacity {:value 1}}}}], :scales [{:name \"x\", :type \"linear\", :range \"width\", :zero false, :domain {:data \"3db7b156-08da-44b7-9b05-f2555a2c1e84\", :field \"data.x\"}} {:name \"y\", :type \"linear\", :range \"height\", :nice true, :zero false, :domain {:data \"3db7b156-08da-44b7-9b05-f2555a2c1e84\", :field \"data.y\"}}], :axes [{:type \"x\", :scale \"x\", :title \"Day\", :titleOffset 40, :grid true} {:type \"y\", :scale \"y\", :title \"Portfolio Value (in $)\", :titleOffset 65, :grid true}]}}"}
;; <=

;; **
;;; #### 30 Day Rolling Volatility
;; **

;; @@
(plot/list-plot (rolling-volatility (map second portfolio-value-by-day) 21) :joined true :plot-size 800 :x-title "Time" :y-title "Portfolio Volatility" :color "red") ;; 21 trading days in a month therefore 21 window-size used
;; @@
;; =>
;;; {"type":"vega","content":{"width":800,"height":494.4376,"padding":{"top":10,"left":80,"bottom":50,"right":10},"data":[{"name":"6c80b02d-2008-4e75-8553-bcf442147448","values":[{"x":0,"y":0.3208053616018207},{"x":1,"y":0.32042301691488445},{"x":2,"y":0.3080348802475122},{"x":3,"y":0.30048938703879147},{"x":4,"y":0.2941407953295476},{"x":5,"y":0.29473878789238855},{"x":6,"y":0.2941684438390647},{"x":7,"y":0.27589246622652},{"x":8,"y":0.2679610456902732},{"x":9,"y":0.26258046578686056},{"x":10,"y":0.26168951292226555},{"x":11,"y":0.2618188666529796},{"x":12,"y":0.26152265813028935},{"x":13,"y":0.27963575806425545},{"x":14,"y":0.2758995678196167},{"x":15,"y":0.27089746172430285},{"x":16,"y":0.27480616943242736},{"x":17,"y":0.27426176559548393},{"x":18,"y":0.25666155289316633},{"x":19,"y":0.23452653610128515},{"x":20,"y":0.28379370456018377},{"x":21,"y":0.2458416291716589},{"x":22,"y":0.24964198058202236},{"x":23,"y":0.2491305815553061},{"x":24,"y":0.25205374567794353},{"x":25,"y":0.2773662496992847},{"x":26,"y":0.28230714123469164},{"x":27,"y":0.28250267667631296},{"x":28,"y":0.2823643817448584},{"x":29,"y":0.28044509846371457},{"x":30,"y":0.28335945864615397},{"x":31,"y":0.2892186296306508},{"x":32,"y":0.30274815897824553},{"x":33,"y":0.30768032999217226},{"x":34,"y":0.2877555709776473},{"x":35,"y":0.2879442174779096},{"x":36,"y":0.30112320173799656},{"x":37,"y":0.2996124869434302},{"x":38,"y":0.2998397437165447},{"x":39,"y":0.29960643299483203},{"x":40,"y":0.2991393419174905},{"x":41,"y":0.2582060533304919},{"x":42,"y":0.25486741785045974},{"x":43,"y":0.26302104356334793},{"x":44,"y":0.27727949276677816},{"x":45,"y":0.2727252730849891},{"x":46,"y":0.24877926499851563},{"x":47,"y":0.2383459203195155},{"x":48,"y":0.2478443416379548},{"x":49,"y":0.24533541825444388},{"x":50,"y":0.25321258874751956},{"x":51,"y":0.25199933439883176},{"x":52,"y":0.2780687095017435},{"x":53,"y":0.2899646596539935},{"x":54,"y":0.28049699316859744},{"x":55,"y":0.28660624263080725},{"x":56,"y":0.28812006304770504},{"x":57,"y":0.27312091382022197},{"x":58,"y":0.27234209437079976},{"x":59,"y":0.2731723002789513},{"x":60,"y":0.273476162748815},{"x":61,"y":0.32637560235493984},{"x":62,"y":0.3246063577509753},{"x":63,"y":0.319090668181135},{"x":64,"y":0.32808573234963684},{"x":65,"y":0.32885879693896336},{"x":66,"y":0.32938146026509646},{"x":67,"y":0.4326484330616951},{"x":68,"y":0.4321815549450567},{"x":69,"y":0.43462093004066754},{"x":70,"y":0.4338919304034467},{"x":71,"y":0.4306910816769507},{"x":72,"y":0.4342486964470939},{"x":73,"y":0.42757312059177033},{"x":74,"y":0.4161581624211857},{"x":75,"y":0.4336441980840983},{"x":76,"y":0.4286689697687663},{"x":77,"y":0.44227976291456156},{"x":78,"y":0.4499064882405788},{"x":79,"y":0.4521467915059053},{"x":80,"y":0.47183584308489257},{"x":81,"y":0.4733626836714192},{"x":82,"y":0.4473258953272873},{"x":83,"y":0.45492334224814535},{"x":84,"y":0.4639315057823298},{"x":85,"y":0.45713042401988946},{"x":86,"y":0.45445891294658414},{"x":87,"y":0.4514322898364341},{"x":88,"y":0.3661406054559971},{"x":89,"y":0.36729890498921086},{"x":90,"y":0.35916992324541697},{"x":91,"y":0.36211074132534293},{"x":92,"y":0.3608289122868849},{"x":93,"y":0.36186627321987236},{"x":94,"y":0.36446123177220646},{"x":95,"y":0.3635356513797567},{"x":96,"y":0.36727160946409715},{"x":97,"y":0.37000079177461},{"x":98,"y":0.347960436137553},{"x":99,"y":0.33847011553478884},{"x":100,"y":0.3665838949898782},{"x":101,"y":0.3544814619550812},{"x":102,"y":0.37962923150091316},{"x":103,"y":0.40950338522734964},{"x":104,"y":0.40539712508304815},{"x":105,"y":0.38542244258125236},{"x":106,"y":0.3786396076774679},{"x":107,"y":0.37854362179775464},{"x":108,"y":0.38645347135416674},{"x":109,"y":0.433718625165306},{"x":110,"y":0.43701655882896406},{"x":111,"y":0.4374995251163966},{"x":112,"y":0.5168714592399035},{"x":113,"y":0.5264551081470711},{"x":114,"y":0.55756457943459},{"x":115,"y":0.5530747948799254},{"x":116,"y":0.5745397250899},{"x":117,"y":0.5884736794620876},{"x":118,"y":0.5996643720998716},{"x":119,"y":0.5998186995891078},{"x":120,"y":0.6028265259510693},{"x":121,"y":0.5874044831776196},{"x":122,"y":0.5766804922481118},{"x":123,"y":0.5576932180373755},{"x":124,"y":0.5256175307791892},{"x":125,"y":0.5448095148727994},{"x":126,"y":0.5397234818330235},{"x":127,"y":0.534023809343227},{"x":128,"y":0.48784451312152016},{"x":129,"y":0.4870069840111701},{"x":130,"y":0.47497753199051723},{"x":131,"y":0.4758538040830017},{"x":132,"y":0.4678611613208274},{"x":133,"y":0.41269652272533763},{"x":134,"y":0.4243303563520202},{"x":135,"y":0.3743384333820346},{"x":136,"y":0.3587074400176778},{"x":137,"y":0.34554511179858566},{"x":138,"y":0.3196574738366581},{"x":139,"y":0.3411452835290777},{"x":140,"y":0.3414708620546784},{"x":141,"y":0.3476148869731338},{"x":142,"y":0.34667623608596937},{"x":143,"y":0.3444969359832907},{"x":144,"y":0.357198046798238},{"x":145,"y":0.3681932699721315},{"x":146,"y":0.3283334242569453},{"x":147,"y":0.3219635673296061},{"x":148,"y":0.3228062294951892},{"x":149,"y":0.3354174663253023},{"x":150,"y":0.35769119764489365},{"x":151,"y":0.3774165820501044},{"x":152,"y":0.3860043457458947},{"x":153,"y":0.38318468942052625},{"x":154,"y":0.3768286885292097},{"x":155,"y":0.36399651549161954}]}],"marks":[{"type":"line","from":{"data":"6c80b02d-2008-4e75-8553-bcf442147448"},"properties":{"enter":{"x":{"scale":"x","field":"data.x"},"y":{"scale":"y","field":"data.y"},"stroke":{"value":"red"},"strokeWidth":{"value":3},"strokeOpacity":{"value":1}}}}],"scales":[{"name":"x","type":"linear","range":"width","zero":false,"domain":{"data":"6c80b02d-2008-4e75-8553-bcf442147448","field":"data.x"}},{"name":"y","type":"linear","range":"height","nice":true,"zero":false,"domain":{"data":"6c80b02d-2008-4e75-8553-bcf442147448","field":"data.y"}}],"axes":[{"type":"x","scale":"x","title":"Time","titleOffset":40,"grid":true},{"type":"y","scale":"y","title":"Portfolio Volatility","titleOffset":65,"grid":true}]},"value":"#gorilla_repl.vega.VegaView{:content {:width 800, :height 494.4376, :padding {:top 10, :left 80, :bottom 50, :right 10}, :data [{:name \"6c80b02d-2008-4e75-8553-bcf442147448\", :values ({:x 0, :y 0.3208053616018207} {:x 1, :y 0.32042301691488445} {:x 2, :y 0.3080348802475122} {:x 3, :y 0.30048938703879147} {:x 4, :y 0.2941407953295476} {:x 5, :y 0.29473878789238855} {:x 6, :y 0.2941684438390647} {:x 7, :y 0.27589246622652} {:x 8, :y 0.2679610456902732} {:x 9, :y 0.26258046578686056} {:x 10, :y 0.26168951292226555} {:x 11, :y 0.2618188666529796} {:x 12, :y 0.26152265813028935} {:x 13, :y 0.27963575806425545} {:x 14, :y 0.2758995678196167} {:x 15, :y 0.27089746172430285} {:x 16, :y 0.27480616943242736} {:x 17, :y 0.27426176559548393} {:x 18, :y 0.25666155289316633} {:x 19, :y 0.23452653610128515} {:x 20, :y 0.28379370456018377} {:x 21, :y 0.2458416291716589} {:x 22, :y 0.24964198058202236} {:x 23, :y 0.2491305815553061} {:x 24, :y 0.25205374567794353} {:x 25, :y 0.2773662496992847} {:x 26, :y 0.28230714123469164} {:x 27, :y 0.28250267667631296} {:x 28, :y 0.2823643817448584} {:x 29, :y 0.28044509846371457} {:x 30, :y 0.28335945864615397} {:x 31, :y 0.2892186296306508} {:x 32, :y 0.30274815897824553} {:x 33, :y 0.30768032999217226} {:x 34, :y 0.2877555709776473} {:x 35, :y 0.2879442174779096} {:x 36, :y 0.30112320173799656} {:x 37, :y 0.2996124869434302} {:x 38, :y 0.2998397437165447} {:x 39, :y 0.29960643299483203} {:x 40, :y 0.2991393419174905} {:x 41, :y 0.2582060533304919} {:x 42, :y 0.25486741785045974} {:x 43, :y 0.26302104356334793} {:x 44, :y 0.27727949276677816} {:x 45, :y 0.2727252730849891} {:x 46, :y 0.24877926499851563} {:x 47, :y 0.2383459203195155} {:x 48, :y 0.2478443416379548} {:x 49, :y 0.24533541825444388} {:x 50, :y 0.25321258874751956} {:x 51, :y 0.25199933439883176} {:x 52, :y 0.2780687095017435} {:x 53, :y 0.2899646596539935} {:x 54, :y 0.28049699316859744} {:x 55, :y 0.28660624263080725} {:x 56, :y 0.28812006304770504} {:x 57, :y 0.27312091382022197} {:x 58, :y 0.27234209437079976} {:x 59, :y 0.2731723002789513} {:x 60, :y 0.273476162748815} {:x 61, :y 0.32637560235493984} {:x 62, :y 0.3246063577509753} {:x 63, :y 0.319090668181135} {:x 64, :y 0.32808573234963684} {:x 65, :y 0.32885879693896336} {:x 66, :y 0.32938146026509646} {:x 67, :y 0.4326484330616951} {:x 68, :y 0.4321815549450567} {:x 69, :y 0.43462093004066754} {:x 70, :y 0.4338919304034467} {:x 71, :y 0.4306910816769507} {:x 72, :y 0.4342486964470939} {:x 73, :y 0.42757312059177033} {:x 74, :y 0.4161581624211857} {:x 75, :y 0.4336441980840983} {:x 76, :y 0.4286689697687663} {:x 77, :y 0.44227976291456156} {:x 78, :y 0.4499064882405788} {:x 79, :y 0.4521467915059053} {:x 80, :y 0.47183584308489257} {:x 81, :y 0.4733626836714192} {:x 82, :y 0.4473258953272873} {:x 83, :y 0.45492334224814535} {:x 84, :y 0.4639315057823298} {:x 85, :y 0.45713042401988946} {:x 86, :y 0.45445891294658414} {:x 87, :y 0.4514322898364341} {:x 88, :y 0.3661406054559971} {:x 89, :y 0.36729890498921086} {:x 90, :y 0.35916992324541697} {:x 91, :y 0.36211074132534293} {:x 92, :y 0.3608289122868849} {:x 93, :y 0.36186627321987236} {:x 94, :y 0.36446123177220646} {:x 95, :y 0.3635356513797567} {:x 96, :y 0.36727160946409715} {:x 97, :y 0.37000079177461} {:x 98, :y 0.347960436137553} {:x 99, :y 0.33847011553478884} {:x 100, :y 0.3665838949898782} {:x 101, :y 0.3544814619550812} {:x 102, :y 0.37962923150091316} {:x 103, :y 0.40950338522734964} {:x 104, :y 0.40539712508304815} {:x 105, :y 0.38542244258125236} {:x 106, :y 0.3786396076774679} {:x 107, :y 0.37854362179775464} {:x 108, :y 0.38645347135416674} {:x 109, :y 0.433718625165306} {:x 110, :y 0.43701655882896406} {:x 111, :y 0.4374995251163966} {:x 112, :y 0.5168714592399035} {:x 113, :y 0.5264551081470711} {:x 114, :y 0.55756457943459} {:x 115, :y 0.5530747948799254} {:x 116, :y 0.5745397250899} {:x 117, :y 0.5884736794620876} {:x 118, :y 0.5996643720998716} {:x 119, :y 0.5998186995891078} {:x 120, :y 0.6028265259510693} {:x 121, :y 0.5874044831776196} {:x 122, :y 0.5766804922481118} {:x 123, :y 0.5576932180373755} {:x 124, :y 0.5256175307791892} {:x 125, :y 0.5448095148727994} {:x 126, :y 0.5397234818330235} {:x 127, :y 0.534023809343227} {:x 128, :y 0.48784451312152016} {:x 129, :y 0.4870069840111701} {:x 130, :y 0.47497753199051723} {:x 131, :y 0.4758538040830017} {:x 132, :y 0.4678611613208274} {:x 133, :y 0.41269652272533763} {:x 134, :y 0.4243303563520202} {:x 135, :y 0.3743384333820346} {:x 136, :y 0.3587074400176778} {:x 137, :y 0.34554511179858566} {:x 138, :y 0.3196574738366581} {:x 139, :y 0.3411452835290777} {:x 140, :y 0.3414708620546784} {:x 141, :y 0.3476148869731338} {:x 142, :y 0.34667623608596937} {:x 143, :y 0.3444969359832907} {:x 144, :y 0.357198046798238} {:x 145, :y 0.3681932699721315} {:x 146, :y 0.3283334242569453} {:x 147, :y 0.3219635673296061} {:x 148, :y 0.3228062294951892} {:x 149, :y 0.3354174663253023} {:x 150, :y 0.35769119764489365} {:x 151, :y 0.3774165820501044} {:x 152, :y 0.3860043457458947} {:x 153, :y 0.38318468942052625} {:x 154, :y 0.3768286885292097} {:x 155, :y 0.36399651549161954})}], :marks [{:type \"line\", :from {:data \"6c80b02d-2008-4e75-8553-bcf442147448\"}, :properties {:enter {:x {:scale \"x\", :field \"data.x\"}, :y {:scale \"y\", :field \"data.y\"}, :stroke {:value \"red\"}, :strokeWidth {:value 3}, :strokeOpacity {:value 1}}}}], :scales [{:name \"x\", :type \"linear\", :range \"width\", :zero false, :domain {:data \"6c80b02d-2008-4e75-8553-bcf442147448\", :field \"data.x\"}} {:name \"y\", :type \"linear\", :range \"height\", :nice true, :zero false, :domain {:data \"6c80b02d-2008-4e75-8553-bcf442147448\", :field \"data.y\"}}], :axes [{:type \"x\", :scale \"x\", :title \"Time\", :titleOffset 40, :grid true} {:type \"y\", :scale \"y\", :title \"Portfolio Volatility\", :titleOffset 65, :grid true}]}}"}
;; <=
